[{"authors":null,"categories":null,"content":"Student of Peoples’ Friendship University of Russia. Study on Fundamental computer science and information technology. Practicing C++ and Arduino programming. The future Systems Data analyst.\n  Download my resumé.\n","date":1653436800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1653436800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Student of Peoples’ Friendship University of Russia. Study on Fundamental computer science and information technology. Practicing C++ and Arduino programming. The future Systems Data analyst.\n  Download my resumé.","tags":null,"title":"Latypova Diana","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Wowchemy’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://example.com/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":null,"categories":null,"content":"Doing various projects of programs in Arduino.\n","date":1653436800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1653436800,"objectID":"d4153b137edf00b54ce170b8ebfbb9ab","permalink":"https://example.com/project/example-2/","publishdate":"2022-05-25T00:00:00Z","relpermalink":"/project/example-2/","section":"project","summary":"Arduino Programming Projects.","tags":["Arduino"],"title":"Arduino Projects","type":"project"},{"authors":null,"categories":null,"content":"Doing various projects of programs in C++.\n","date":1653436800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1653436800,"objectID":"e8f8d235e8e7f2efd912bfe865363fc3","permalink":"https://example.com/project/example/","publishdate":"2022-05-25T00:00:00Z","relpermalink":"/project/example/","section":"project","summary":"C++ Programming Projects.","tags":["Cpp"],"title":"C++ Projects","type":"project"},{"authors":["Latypova Diana"],"categories":null,"content":"How was my fourth week? Last week was not full of bright events again. As always, I did laboratory work on the OS and programmed a little in C++.\nIn the process of doing laboratory work No. 9 on OS, I gained practical skills in working with the Emacs editor. The emacs editor turned out to be more convenient than the vi editor. In laboratory work No. 10 on OS, I learned the basics of programming in the UNIX/Linux OS shell and learned how to write small batch files. The end of the module is coming soon, so I want to finish the lab work as soon as possible.\nAlso last week I went with the guys to play volleyball, it was fun. I took a little break from my studies.\nI think next week will be the final one, I will try to close all the subjects.\n","date":1653436800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1653436800,"objectID":"78e317132b5ebe7fdf91c86fed27cbfe","permalink":"https://example.com/post/my_last_week-4/","publishdate":"2022-05-25T00:00:00Z","relpermalink":"/post/my_last_week-4/","section":"post","summary":"The fourth week...","tags":null,"title":"My 4 last week","type":"post"},{"authors":["Latypova Diana"],"categories":null,"content":"Introduction Programming is often mentioned in an applied context. It seems that only mobile applications, Internet systems and special effects for movies are created with its help. But initially programming was intended for solving scientific problems. In addition, programming itself is a science, which will be useful to learn about for those who have decided to link a career with computer development.\nWhat is Scientific Programming? A scientific programming language is a programming language that is designed and optimized for the use of mathematical formulas and matrices. Such languages are characterized not only by the presence of libraries that perform mathematical or scientific functions, but also by the syntax of the language itself. For example, neither C++ nor Python have built-in matrix types or functions for matrix arithmetic operations (addition, multiplication, etc.); instead, this functionality is available through standard libraries. Scientific programming languages include ALGOL, PL, Fortran, J, Julia, Maple, MATLAB and R. Now we will consider some of them…\nALGOL Algol is the name of a number of programming languages used in the compilation of programs for solving scientific and technical problems on a computer. The features of the Algol language have become typical for most imperative languages created later than it.\nIt was in Algol that the idea of a program appeared not as a free sequence of commands, but as a block structure consisting of clearly described and separated parts. The main block of the Algol program is the main program itself. It contains its executable part enclosed in a block bounded by a pair of keywords begin and end, as well as descriptions of subroutines. Each subroutine is a miniature program that has its own data described inside it.\nPL PL is a programming language developed in 1964, designed for scientific, engineering and business—oriented computing. It contains such a wide set of syntactic constructions and built-in functions that probably there is not a single compiler that supports all the features provided in the language specification. Supports recursion and structural programming, has been widely used in data processing.\nUnlike other programming languages, PL has a free syntax: keywords can be identifiers depending on the context. This makes it possible to develop the language, replenishing it with new keywords that would not conflict with identifiers in old programs. The language provides very generalized operators with many syntax options.\nMATLAB MATLAB is a package of application programs for solving technical computing problems. The package is used by more than a million engineers and scientists, it works on most modern operating systems, including Linux, macOS, Solaris and Windows.\nMATLAB is a high-level interpreted programming language that includes matrix-based data structures, a wide range of functions, an integrated development environment, object-oriented capabilities and interfaces to programs written in other programming languages.\nPrograms written in MATLAB come in two types — functions and scripts. Functions have input and output arguments, as well as their own workspace for storing intermediate calculation results and variables. Scripts also use a common workspace.\nConclusion Scientific programming is at the heart of any modern global research. All advanced technologies — from quantum computers to space programs — would be impossible without specialists in the field of scientific programming, able to provide scientists with a reliable and accurate tool for making discoveries.\n","date":1653436800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1653436800,"objectID":"3765ca4574d0f851be31d7d52723c70e","permalink":"https://example.com/post/scientific-prog/","publishdate":"2022-05-25T00:00:00Z","relpermalink":"/post/scientific-prog/","section":"post","summary":"Learn about scientific programming languages","tags":null,"title":"Scientific Programming","type":"post"},{"authors":["Latypova Diana"],"categories":null,"content":"Introduction Compiling a report on the practice, the student evaluates the results of the work and draws conclusions about his qualifications, knowledge and skills acquired at the university. In order for a job to be accepted, it must be not only competent and informative.\nRules of registration Despite the existence of their own requirements at each university, which can be found in the methodological literature of your university, there are standards for the design of the practice report:\n  The volume of the report is 15-25 pages.\n  The volume of the introduction and conclusion of 1-2 pages.\n  The report should be executed by any printing method on a typewriter or using a computer and a printer on one side of a sheet of A4 white paper, at one and a half intervals.\n  Font Times New Roman 14.\n  Font color should be black.\n  Margins are applied: right - 10 mm, upper and lower - 20 mm, left - 30 mm.\n  The orientation of the document is portrait, the document is stitched on the left.\n  The alignment method is in width, without indentation on the left and right.\n  The red line starts after 1.25 cm.\n  No intervals are made before and after the paragraph.\n  Section headings are located in the middle of the sheet and are printed in bold capital letters without a dot at the end, without underlining. If the title consists of two sentences, they are separated by a dot. Each section starts with a new sheet.\n  The headings of subsections and paragraphs should be printed with paragraph indentation with a capital letter without a dot at the end, without underlining, width alignment (bold are not highlighted). If the title consists of two sentences, they are separated by a dot.\n  The pages of the report should be numbered in Arabic numerals, observing the end-to-end numbering throughout the text of the report. The page number is placed in the center of the lower part of the sheet without a dot. The title page is included in the general page numbering of the report. The page number is not put down on the title page. The content of the report is numbered 2.\n  Between the sections and subsections available in the report, there is an indent of two blank lines with an interval of 1.0.\n  Subsections are separated from the text by two blank lines with an interval of 1.0.\n  All elements of the report (introduction, main part, references, conclusion, appendices) begin with a new sheet.\n  The name of the table should be placed above the table on the left, without paragraph indentation in one line with its number separated by a dash with an interval of 1.0. Example: “Table 2 – title”. Each table or figure should be addressed in the text of the work (before the table and figure) and a link to the source from which the table or figure is taken. It is allowed to use a font size in the table smaller than in the text (min -10) line spacing in the table 1.0.\n  When transferring a part of the table to another page, the word table, its number and name are indicated once on the left above the first part of the table, and the words “Continuation of the table” are also written on the left above the other parts and indicate the table number.\n  Separate the table from the text before and after an interval of 6 pt.\n  At the end of the name of the table, a footnote is made to the source of the table:\n    for the author’s tables, you should sign It Compiled by the author, and indicate the main literature that you used for calculations or compiling the table;\n  the borrowed tables are accompanied by links to the source, indicating the page numbers from where the information was taken.\n   The name of the drawing is placed in the center under the drawing without a dot at the end, in the following format: the word Drawing, its number and the name of the drawing through a dash.\n  If the name of the drawing consists of several lines, then it should be written in one line spacing. The name of the drawing is given with a capital letter without a dot at the end. Hyphenation of words in the name of graphic material is not allowed.\n  Equations and formulas should be separated from the text in a separate line. Above and below each formula or equation, at least one free line should be left with an interval of 1.0. If the equation does not fit in one line, then it should be moved after the equal sign (=) or after the plus signs (+), minus (-), multiplication (x), division (:) or other mathematical signs, and the sign at the beginning of the next line is repeated.\n  The explanation of the values of symbols and numerical coefficients should be given directly under the formula in the same sequence in which they are given in formula. The value of each character and numerical coefficient must be given from a new line. The first line of the explanation begins with the word “where” without a colon from the paragraph. Formulas should be placed in the middle of the line and indicated by ordinal numbering within the entire work with Arabic numerals in parentheses in the …","date":1589846400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1589846400,"objectID":"677b480c0a60831b4e4ce258e50b5ccc","permalink":"https://example.com/post/report/","publishdate":"2020-05-19T00:00:00Z","relpermalink":"/post/report/","section":"post","summary":"When making a report, you need to follow certain rules of registration. I will tell you about this in my post...","tags":null,"title":"About reports...","type":"post"},{"authors":["Latypova Diana"],"categories":null,"content":"How was my third week? Last week I had more Arduino programming. And in general, the week passed as well as the past.\nIn laboratory work №7 on the OS, I mastered the basic capabilities of the Midnight Commander command shell, and also acquired practical skills in viewing directories and files; manipulating them. In laboratory work №8, I got acquainted with the Linux operating system and gained practical skills working with the vi editor installed by default in almost all distributions. Laboratory work was not particularly difficult. I did seven laboratory works on Arduino, each of them was interesting.\nI think next week will be more intense than the previous ones.\n","date":1589846400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1589846400,"objectID":"da59f68fe4b4df9b666d17557bee14db","permalink":"https://example.com/post/my_last_week-3/","publishdate":"2020-05-19T00:00:00Z","relpermalink":"/post/my_last_week-3/","section":"post","summary":"Third week...","tags":null,"title":"My 3 last week","type":"post"},{"authors":["Latypova Diana"],"categories":null,"content":"Introduction What is a “markup language”?\nA markup language is a set of codes that, when applied to plain text, allows you to add one or more of the following properties (among others):\n  Define the text\n  Structure the text\n  Describe the layout of the text\n  Decorate the text\n  One markup language you encounter every day (unless you’re a hermit) is hypertext markup language, or HTML. Websites and apps that bring you news and show you your email are built, at least in part, with HTML markup using tags as a mechanism for markup of raw text content.\nThe problem with some markup languages (among them HTML) is that entering these tags manually is a very tedious task. And with other languages, such as XML, tags and their attributes make up more of the overall content than the text itself.\nExamples of markup languages Markup languages are used wherever it is required to obtain formatted text based on text alone: in typography (SGML, TeX, PostScript, RTF), computer user interfaces (Microsoft Word, OpenOffice), the World Wide Web (HTML, XHTML, XML, WML, VML, PGML, SVG, XBRL).\nLightweight markup languages If you wanted to take advantage of markup languages, for example by publishing an HTML page on the internet or converting a DocBook file to PDF so that it could be printed, you had to do one of two things. On the one hand, you can spend time learning these languages from the inside and outside, writing them down manually, and then checking your work three times. Or you could invest the money in a tool that manages the complexity of them for you.\nFortunately, some enterprising developers have come up with a third option. They created new markup languages that contained many (in some cases most or all) of the functions of heavier analogues, but greatly simplified the syntax. They are used where a person has to prepare text in a regular text editor (blogs, forums, wikis), or where it is important that a user with a regular text editor can also read the text. Here are some widely used lightweight markup languages:\n  BBCode\n  Markdown\n  reStructuredText\n  Textile\n  Wiki markup\n  Various auto-documentation systems (for example, Javadoc).\n  HTML The most common language is HTML (an abbreviation of the English Hypertext Markup Language − “hypertext markup language”). It is standard for Internet documents, with its help all web pages are created. Documents that contain a special code are processed by browsers and presented to users in a convenient interface. Thus, you get the opportunity to view pages, print them, use them to transfer data to servers.\nTextile It is one of the simplest markup languages, has somewhat more functionality. Its main task is to automatically convert text into markup while maintaining the breakdown into paragraphs. The language is used in CMS Textpattern.\nBBCode The abbreviation from the English Bulletin Board Code is a markup language that is used for formatting (formatting) messages on various electronic bulletin boards, forums, comments, personal messages, and so on. Tags similar to HTML tags are used to format the text. Unlike HTML tags, BBCode is enclosed in square brackets.\nLaTeX It is a markup language that is capable of automating many operations related to the layout of documents, such as automatic page numbering, creation of tables, illustrations, formulas, cross-references, headers, footers, subject indexes, tables of contents and references. Being distributed under the LaTeX Project Public License, LaTeX refers to free software.\nMarkdown Markdown is an easy way to add formatting. — for example, headings, bold/italic text and lists — in plain text. Instead of relying on HTML or WYSIWYG editors, Markdown allows you to create full pages of formatted text without having to take your fingers off the keyboard, and it’s all much more intuitive than HTML.\nConclusion While the idea of using markup languages with text documents was developing, this increased the use of markup languages in other areas, they suggested using them to represent various types of information, including playlists, vector graphics, web services, user interfaces.\n","date":1589155200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1589155200,"objectID":"f5a41fa111af2eb248df32e4ee862e33","permalink":"https://example.com/post/markup_languages/","publishdate":"2020-05-11T00:00:00Z","relpermalink":"/post/markup_languages/","section":"post","summary":"Interested in learning about lightweight markup languages? Then here you are!","tags":null,"title":"Lightweight markup languages.","type":"post"},{"authors":["Latypova Diana"],"categories":null,"content":"How was my second week? Last week, in honor of the holiday, we had one day off. On this day, my friends and I took a walk around Moscow. The rest of my days were also devoted to Laboratory work on OS, programming technology and a Computer workshop on IT.\nAccording to the OS, we did the 2nd stage of the project and two laboratory works №5 and №6. In Laboratory work №5, I got acquainted with the Linux file system, its structure, names and contents of directories. In addition, I acquired practical skills in using commands to work with files and directories, managing processes (and works), checking disk usage and maintaining the file system. And in Laboratory work №6, I got acquainted with the tools for searching files and filtering text data.\nAnd also acquired practical skills: process management (and tasks), disk usage verification and file system maintenance. In the 2nd stage of the project, it was necessary to fill out information about yourself on the website.\nI still practice programming technology in C++, and at the computer workshop on IT - in Arduino. In general, the whole subsequent module will be full of programming for me.\n","date":1589155200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1589155200,"objectID":"36b39a0a02104e102421370b76ddea98","permalink":"https://example.com/post/my_last_week-2/","publishdate":"2020-05-11T00:00:00Z","relpermalink":"/post/my_last_week-2/","section":"post","summary":"Let's see what happened to me second last week.","tags":null,"title":"My 2 last week","type":"post"},{"authors":["Latypova Diana"],"categories":null,"content":"Get Started My last week flew by unnoticed. For almost the whole week, I was dealing with Operating systems and a Computer workshop on IT. Over the past week, I have completed two laboratory works and the stage 1st of an Individual project on Operating systems, as well as laboratory work on a Computer workshop on IT.\nThat week was fun, because during the installation of the second operating system (Linux) on my laptop, Windows was accidentally demolished. The only thing that calmed me was that there were no particularly important documents, since I reinstalled it before starting my studies. Because of this oversight, I had to reinstall everything.\nAs I said earlier, I completed laboratory work №3 and №4, the 1st stage of an Individual project on OS. In the process of doing laboratory work №3, I learned how to make reports using the lightweight Markdown markup language. It was necessary to make a report in Markdown format on laboratory work №2, it turned out not to be very difficult. And as a result of laboratory work №4, I learned how to work in the Terminal, acquired practical skills of user interaction with the system via the command line.\nIt was also interesting to do laboratory work on a Computer workshop on IT. There I study the Arduino programming language. Throughout the module, we will perform laboratory work on robotics using an Arduino microcontroller.\nIn general, my last week was quite productive and entertaining.\n","date":1588809600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1588809600,"objectID":"9724ac236cd670bb534407b663cf2ac5","permalink":"https://example.com/post/my_last_week/","publishdate":"2020-05-07T00:00:00Z","relpermalink":"/post/my_last_week/","section":"post","summary":"Let's see what happened to me last week.","tags":null,"title":"My 1 last week","type":"post"},{"authors":["Latypova Diana"],"categories":null,"content":"Introduction In recent years, the popularity of git has shown explosive growth. This version control system is used by various open source projects. You can start by learning the most commonly used commands, and then gradually expand your knowledge. This is exactly what we will do in this article.\nWhat is Git? GIT is a distributed version control system created by Linus Torvalds to manage the development of the Linux kernel and is currently very widespread among software developers. Git has two main tasks: the first is to store information about all changes in your code, starting from the very first line, and the second is to ensure the convenience of teamwork on the code.\nWhat is a Version Control System? The Version Control System (VCS) is a software to facilitate working with changing information. The version control system allows you to store multiple versions of the same document, go back to earlier versions if necessary, determine who made a change and when, and much more. Such systems are most widely used in software development for storing the source codes of the program being developed.\nVersion control software keeps track of all changes made to the code in a special database. If an error is detected, developers can go back and perform a comparison with earlier versions of the code to fix errors, minimizing problems for all team members.\nCentralized version control systems Centralized version control systems are client-server applications, when the project repository exists in a single instance and is stored on the server. Access to it was carried out through a special client application.\nCVS (Concurrent Versions System, Simultaneous Versions System) is one of the first systems that became widespread among developers, it originated in the late 80s of the last century. Currently, this product is not being developed, this is primarily due to a number of key drawbacks, such as the inability to rename files, inefficient storage, and almost complete lack of integrity control.\nSubversion (SVN) is a version control system created to replace CVS. SVN was developed in 2004 and is still in use. Despite many advantages over CVS, SVN still has disadvantages, such as problems with renaming, inability to delete data from storage, problems in the branch merge operation, etc. In general, SVN was (and remains) a significant step forward compared to CVS.\nDistributed version control systems Distributed Version Control Systems (DVCS) allow you to store a repository (a copy of it) for each developer working with this system. At the same time, it is possible to allocate a central repository (conditionally) to which changes from local ones will be sent and, with it, these local repositories will be synchronized. When working with such a system, users periodically synchronize their local repositories with the central one and work directly with their local copy. After making a sufficient number of changes to the local copy, they (changes) are sent to the server. At the same time, the server is most often chosen conditionally, since in most DVCS there is no such thing as a “dedicated server with a central repository\u0026#34;.\nGit hosting A number of services provide hosting for git repositories, among the most famous are GitHub, Codebase, SourceForge, SourceHut, Gitea, Bitbucket, GitLab.\nWhat is an SSH key and why is it needed? To work from your computer with GitHub, to have access to projects stored on the service, to execute commands in the console without constantly confirming the password, you need to log in with the server. SSH keys help with this. Each SSH key contains a pair: a public (public) and a private (private) key. The public key is sent to the server, you don’t have to hide it from everyone and not worry that someone will see it and steal it. It is useless without its private key pair. But the private key is the secret part. Only you should have access to it.\nBasic git commands The git add command adds the contents of the working directory to the index (staging area) for a subsequent commit.\nThe git status command shows the status of files in the working directory and index: which files have been modified but not added to the index; which are waiting for a commit in the index.\nThe git diff command is used to calculate the difference between any two Git trees.\nThe git commit command takes all the data added to the index using git add and stores their cast in the internal database, and then shifts the pointer of the current branch to this cast.\nThe git rm command is used in Git to delete files from the index and working copy.\nThe git mv command is just a convenient way to move a file and then execute git add for the new file and git rm for the old one.\nThe git clean command is used to remove garbage from the working directory.\nConclusion We have analyzed the basic knowledge of what a Version Control System and Git are. I tried to collect all the most important information and present it as succinctly and concisely as …","date":1588809600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1588809600,"objectID":"4b21d5dcf3e4ccbf5460b69b359a5446","permalink":"https://example.com/post/git/","publishdate":"2020-05-07T00:00:00Z","relpermalink":"/post/git/","section":"post","summary":"Getting to know information about Version Control and Git","tags":null,"title":"Version control. Git.","type":"post"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne  Two  Three   A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}}  Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://example.com/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":["Latypova Diana","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"ff6a19061a984819d30c916886db56ef","permalink":"https://example.com/publication/example/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/example/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":[],"title":"An example conference paper","type":"publication"}]